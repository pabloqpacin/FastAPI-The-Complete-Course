services:

  postgresql:
    image: postgres:16.1-alpine
    container_name: postgresql
    volumes:
      - ./db/fastapi_todos.sql:/docker-entrypoint-initdb.d/fastapi_todos.sql:ro
      - postgresql_data:/var/lib/postgresql/data
    env_file: ./.env.development
    # ports: [5010:5432]          # DEV: descomentar pa conexiones con pgadmin, dbeaver, etc
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fastapi"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  fastapi:
    build:
      context: .
    image: "${DOCKER_REGISTRY}/${DOCKER_PROJECT}/${DOCKER_IMAGE}:${DOCKER_TAG}"
    container_name: fastapi
    #! PROD: comentar volumes y montar src/ desde Dockerfile
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ./pytest.ini:/app/pytest.ini
    env_file: ./.env.development
    ports:
      - 5012:80
    depends_on:
      postgresql:
        condition: service_healthy
    restart: unless-stopped

  # pgadmin:
  #   image: dpage/pgadmin4:8.12
  #   container_name: pgadmin
  #   volumes: [pgadmin_data:/var/lib/pgadmin]
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: poc@setenova.es
  #     PGADMIN_DEFAULT_PASSWORD: USd3Fiv2,tJ,b[H\2r{
  #   ports: [5011:80]
  #   restart: always


volumes:
  postgresql_data:
  # pgadmin_data:


# ---
# OJO: integrar con vault.setenova.es para las contras

